generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Recipe {
  id          Int      @id @default(autoincrement())
  title       String
  summary     String
  instructions String
  rawIngredients String // Store original ingredients list as JSON string
  tags        String   @default("[]") // JSON array of tags (vegetarian, dairy free, salad, etc.)
  ingredients  Ingredient[] @relation("RecipeIngredients")
  startSeason  Int      // 1 to 12 (January to December)
  endSeason    Int      // 1 to 12 (January to December)
  grade       Int      @default(0) // 0 to 3 stars
  time        Int      // minutes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  plannedRecipes PlannedRecipe[]
}

model Ingredient {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  startSeason Int      // 1 to 12 (January to December)
  endSeason   Int      // 1 to 12 (January to December)
  recipes     Recipe[] @relation("RecipeIngredients")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MealPlan {
  id        Int      @id @default(autoincrement())
  userId    String   // User identifier for the meal plan
  status    String   @default("active") // active, completed, archived
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  plannedRecipes PlannedRecipe[]
  groceryList    GroceryList?
}

model PlannedRecipe {
  id         Int      @id @default(autoincrement())
  mealPlanId Int
  recipeId   Int
  completed  Boolean  @default(false)
  addedAt    DateTime @default(now())
  
  mealPlan   MealPlan @relation(fields: [mealPlanId], references: [id], onDelete: Cascade)
  recipe     Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model GroceryList {
  id           Int      @id @default(autoincrement())
  mealPlanId   Int      @unique
  ingredients  String   // JSON string of aggregated ingredients
  checkedItems String   // JSON string of checked item IDs/names
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  mealPlan     MealPlan @relation(fields: [mealPlanId], references: [id], onDelete: Cascade)
}